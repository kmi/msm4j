{
    "apiVersion": "1.2",
    "swaggerVersion": "1.2",
    "basePath": "http://mcd279192.open.ac.uk:8080",
    "resourcePath": "/",
    "authorizations": {
        "servioticyAuth": [
            {
                "type": "apiKey",
                "passAs": "header",
                "keyname": "Authorization"
            }
        ]
    },
    "info": {
        "title": "OU IoT Living Lab ServIoTicy",
        "description": "OU IoT Living Lab ServIoTicy.",
        "termsOfServiceUrl": "Own risk",
        "contact": "carlos.pedrinaci@open.ac.uk",
        "license": "Creative Commons Attribution 4.0 International (CC BY 4.0)",
        "licenseUrl": "http://creativecommons.org/licenses/by/4.0/"
    },
    "apis": [
        {
            "path": "/",
            "produces": [
                "application/json"
            ],
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get the list of Service Objects",
                    "notes": "This returns a list of Service Objects by the authenticated user",
                    "nickname": "getServiceObjects",
                    "type": "ServiceObject",
                    "authorizations": {},
                    "parameters": [],
                    "responseMessages": [
                        {
                            "code": 403,
                            "message": "Access was denied!",
                            "info": "docs.servioticy.com"
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Create a new ServiceObject definition and register it in the repository.",
                    "notes": "Create a new ServiceObject definition and register it in the repository. The unique ServiceObject id (soId) is returned on success.",
                    "nickname": "createServiceObject",
                    "type": "string",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "serviceObject",
                            "description": "Service Object description.",
                            "type": "ServiceObject",
                            "paramType": "body",
                            "required": true,
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 403,
                            "message": "Access was denied!",
                            "info": "docs.servioticy.com"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/{soId}",
            "produces": [
                "application/json"
            ],
            "operations": [
                {
                    "method": "GET",
                    "summary": "Retrieve the description of a Service Object",
                    "notes": "This method retrieves the description of a Service Object in JSON",
                    "nickname": "getServiceObjectDescription",
                    "type": "ServiceObject",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "soId",
                            "description": "Service Object Unique Identifier.",
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 403,
                            "message": "Access was denied!",
                            "info": "docs.servioticy.com"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/{soId}/streams",
            "produces": [
                "application/json"
            ],
            "operations": [
                {
                    "method": "GET",
                    "summary": "Retieve the description of the streams of a ServiceObject",
                    "notes": "Retieve the description of the streams field in the ServiceObject definition document",
                    "nickname": "getServiceObjectStreams",
                    "type": "Stream",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "soId",
                            "description": "Service Object Unique Identifier.",
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 403,
                            "message": "Access was denied!",
                            "info": "docs.servioticy.com"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/{soId}/streams/{streamId}",
            "produces": [
                "application/json"
            ],
            "operations": [
                {
                    "method": "PUT",
                    "summary": "Store (and process) new data associated to the stream streamId of the ServiceObject soId",
                    "notes": "Store (and process) new data associated to the stream streamId of the ServiceObject soId",
                    "nickname": "updateStream",
                    "type": "string",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "soId",
                            "description": "Service Object Unique Identifier.",
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "streamId",
                            "description": "Identifier of the stream to retrieve.",
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "channels",
                            "description": "The channels update.",
                            "type": "string",
                            "paramType": "body"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 403,
                            "message": "Access was denied!",
                            "info": "docs.servioticy.com"
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Clear all data associated to the stream streamId of the ServiceObject soId",
                    "notes": "Clear all data associated to the stream streamId of the ServiceObject soId",
                    "nickname": "clearStream",
                    "type": "string",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "soId",
                            "description": "Service Object Unique Identifier.",
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "streamId",
                            "description": "Identifier of the stream to retrieve.",
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 403,
                            "message": "Access was denied!",
                            "info": "docs.servioticy.com"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/{soId}/streams/{streamId}/subscriptions",
            "produces": [
                "application/json"
            ],
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get all the subscriptions created by the user",
                    "notes": "Get all the subscriptions to a Stream of a particular Service Object created by the user",
                    "nickname": "getStreamSubscriptions",
                    "type": "Subscription",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "soId",
                            "description": "Service Object Unique Identifier.",
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "streamId",
                            "description": "Identifier of the stream to retrieve.",
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 403,
                            "message": "Access was denied!",
                            "info": "docs.servioticy.com"
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Creates a new external subscription for the stream streamId of the ServiceObject soId. ",
                    "notes": "Creates a new external subscription for the stream streamId of the ServiceObject soId. Possible callbacks are: 'http': For external HTTP endpoints, and 'pubsub': For COMPOSE Pub/Sub notifications using either MQTT, STOMP/TCP or STOMP/WS",
                    "nickname": "createStreamSubscription",
                    "type": "string",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "soId",
                            "description": "Service Object Unique Identifier.",
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "streamId",
                            "description": "Identifier of the stream to retrieve.",
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "subscription",
                            "description": "Subscription description.",
                            "type": "Subscription",
                            "paramType": "body"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 403,
                            "message": "Access was denied!",
                            "info": "docs.servioticy.com"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/{soId}/actuations",
            "produces": [
                "application/json"
            ],
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get all actuations that can be invoked in a ServiceObject",
                    "notes": "Get all actuations that can be invoked in a ServiceObject",
                    "nickname": "getServiceObjectActuations",
                    "type": "Action",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "soId",
                            "description": "Service Object Unique Identifier.",
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 403,
                            "message": "Access was denied!",
                            "info": "docs.servioticy.com"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/{soId}/actuations/{actuationName}",
            "produces": [
                "application/json"
            ],
            "operations": [
                {
                    "method": "POST",
                    "summary": "Launch an acuation on a device",
                    "notes": "Launch an acuation on a device",
                    "nickname": "triggerActuation",
                    "type": "string",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "soId",
                            "description": "Service Object Unique Identifier.",
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "actuationName",
                            "description": "Name of the actuation to be triggered.",
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 403,
                            "message": "Access was denied!",
                            "info": "docs.servioticy.com"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/{soId}/streams/{streamId}/{timeModifier}",
            "produces": [
                "application/json"
            ],
            "operations": [
                {
                    "method": "GET",
                    "summary": "Retieve the description of the streams of a ServiceObject",
                    "notes": "Retieve the description of the streams field in the ServiceObject definition document",
                    "nickname": "getServiceObjectStreamUpdates",
                    "type": "string",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "soId",
                            "description": "Service Object Unique Identifier.",
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "streamId",
                            "description": "Identifier of the stream to retrieve.",
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "timeModifier",
                            "description": "If timeModifier modifier is provided, only the updates after the time specified as an epoch will be returned. For the last update use 'lastUpdate'.",
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 403,
                            "message": "Access was denied!",
                            "info": "docs.servioticy.com"
                        }
                    ]
                }
            ]
        }
    ],
    "models": {
        "ServiceObject": {
            "id": "ServiceObject",
            "description": "Service Object JSON object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the Service Object"
                },
                "name": {
                    "type": "string",
                    "description": "Human oriented name for the Service Object"
                },
                "description": {
                    "type": "string",
                    "description": "Human oriented description of the Service Object."
                },
                "URL": {
                    "type": "string",
                    "description": "The URL of the Web Object for this Service Object"
                },
                "public": {
                    "type": "boolean",
                    "description": "Indicates if this Service Object is public or not."
                },
                "streams": {
                    "$ref": "Stream",
                    "description": "Streams of data provided by the Service Object. Every Stream is composed of 1 or more synchronised channels. "
                },
                "customFields": {
                    "$ref": "CustomField",
                    "description": "Custom fields for the Service Object. "
                },
                "actions": {
                    "$ref": "Action",
                    "description": "Actions attached to the Service Object. "
                },
                "properties": {
                    "$ref": "Property",
                    "description": "Streams of data provided by the Service Object. Every Stream is composed of 1 or more synchronised channels. "
                }
            }
        },
        "Stream": {
            "id": "Stream",
            "description": "Stream field of a Service Object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Human oriented name for the Service Object"
                },
                "description": {
                    "type": "string",
                    "description": "Human oriented description of the Service Object."
                },
                "type": {
                    "type": "string",
                    "description": "The type of stream."
                },
                "subscriptions": {
                    "type": "string",
                    "description": "Subscriptions of this Service Object."
                },
                "channels": {
                    "$ref": "Channel",
                    "description": "Channels of this Stream."
                }
            }
        },
        "Channel": {
            "id": "Channel",
            "description": "Channel of a Stream of a Service Object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Human oriented name for the Service Object"
                },
                "description": {
                    "type": "string",
                    "description": "Human oriented description of the Service Object."
                },
                "type": {
                    "type": "string",
                    "description": "The type of stream."
                },
                "subscriptions": {
                    "type": "string",
                    "description": "Subscriptions of this Service Object."
                },
                "channels": {
                    "type": "string",
                    "description": "Channels of this Stream. To be upgraded when arbitrary objects are supported in Swagger models."
                }
            }
        },
        "CustomField": {
            "id": "CustomField",
            "description": "Custom Field of a Service Object",
            "properties": {}
        },
        "Action": {
            "id": "Action",
            "description": "Action attached to a Service Object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the action."
                },
                "description": {
                    "type": "string",
                    "description": "Description of what the action does."
                }
            }
        },
        "Property": {
            "id": "Property",
            "description": "Property of a Service Object",
            "properties": {}
        },
        "Subscription": {
            "id": "Subscription",
            "description": "Stream Subscription object",
            "required": [
                "callback",
                "destination"
            ],
            "properties": {
                "callback": {
                    "type": "string",
                    "description": "Human oriented name for the Service Object",
                    "enum": [
                        "http",
                        "pubsub"
                    ]
                },
                "destination": {
                    "type": "string",
                    "description": "URL of the callback."
                },
                "customFields": {
                    "type": "string",
                    "description": "The type of stream. The property 'aliases' can be used to specify aliases that will replaced in the destination field with the corresponding values. "
                }
            }
        }
    }

}